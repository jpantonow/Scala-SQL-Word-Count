file%3A%2F%2F%2Fhome%2Fjpantonow%2FDesktop%2Fwordcount%2Fscala-word-count%2Fsrc%2Fmain%2Fscala%2Fcomponents%2Fcommands%2FWordCount.scala:55: error: ; expected but = found
      export_folder: String = 
                            ^
occurred in the presentation compiler.

action parameters:
uri: file://<WORKSPACE>/src/main/scala/components/commands/WordCount.scala
text:
package components.commands
import components.db._
import components.db.{CreateTables, Select_Most_Frequent, Insert_Book}
import components.db.Export_to_CSV

class WordCount extends Interaction {
  def create: Unit = {
    val db_create = new CreateTables(txt_file, db_file, book_name)
    db_create.execute
    print_success("\nSuccessfully created the Database")
  }

  def register_doc: Unit = {
    val db_register = new Register_Documents(txt_file, db_file, book_name)
    db_register.register
    print_success("\nSucessfully registered into Documents")
  }

  def insert: Unit = {
    val db_insert = new Insert_Book(txt_file, db_file, book_name)
    db_insert.execute
    print_success("\nSuccessfully into Database")
  }

  def register_updates: Unit = {
    val db_register = new Register_Documents(txt_file, db_file, book_name)
    db_register.count_words
    db_register.longest_word
    db_register.count_chars
    db_register.avg_char_word
    db_register.length_25
  }

  def selecionar: Unit = {
    val db_select_most_frequent = new Select_Most_Frequent(txt_file, db_file, book_name)
    print_success("\n25 Most frequent words")
    db_select_most_frequent.words
    print_success("\n25 Most frequent characters")
    db_select_most_frequent.characters
  }

  def print_success(string: String): Unit = {
    val greenColor = "\u001B[32m"
    val resetColor = "\u001B[0m"
    println(greenColor + string + resetColor)
  }

  def check_existence: Boolean = {
    val db_register = new Register_Documents(txt_file, db_file, book_name)
    return db_register.check_register
  }

  def export_csv: Unit = {
    if (export_message == "y") {
      export_folder: String = 
      val db_Export_CSV = new Export_to_CSV(txt_file, db_file, book_name)
      db_Export_CSV.export_words
      db_Export_CSV.export_characters
      db_Export_CSV.export_data
      print_success("Successfully into CSV File")
    } else {
      return
    }
  }

  def execute: Unit = {
    create
    if (check_existence) {
      print_success("\nThe book is already in the database. Showing results:")
      selecionar
      export_csv
    } else {
      register_doc
      insert
      register_updates
      selecionar
      export_csv
    }
  }
}



error stacktrace:
scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:367)
	scala.meta.internal.parsers.ScalametaParser.expect(ScalametaParser.scala:369)
	scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:373)
	scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:389)
	scala.meta.internal.parsers.ScalametaParser.iter$6(ScalametaParser.scala:4503)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$1(ScalametaParser.scala:4518)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$1$adapted(ScalametaParser.scala:4468)
	scala.meta.internal.parsers.ScalametaParser.scala$meta$internal$parsers$ScalametaParser$$listBy(ScalametaParser.scala:505)
	scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4468)
	scala.meta.internal.parsers.ScalametaParser.blockWithinDelims(ScalametaParser.scala:2434)
	scala.meta.internal.parsers.ScalametaParser.blockWithStats$1(ScalametaParser.scala:2437)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:2439)
	scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:300)
	scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:346)
	scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2436)
	scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2430)
	scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2187)
	scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2158)
	scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2141)
	scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2026)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:1607)
	scala.meta.internal.parsers.ScalametaParser.atPosOpt(ScalametaParser.scala:303)
	scala.meta.internal.parsers.ScalametaParser.autoPosOpt(ScalametaParser.scala:347)
	scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1512)
	scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1403)
	scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:1425)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$ifClause$1(ScalametaParser.scala:1470)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:349)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:354)
	scala.meta.internal.parsers.ScalametaParser.ifClause(ScalametaParser.scala:1461)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:1518)
	scala.meta.internal.parsers.ScalametaParser.atPosOpt(ScalametaParser.scala:303)
	scala.meta.internal.parsers.ScalametaParser.autoPosOpt(ScalametaParser.scala:347)
	scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1512)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$4(ScalametaParser.scala:4501)
	scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4338)
	scala.meta.internal.parsers.ScalametaParser.iter$6(ScalametaParser.scala:4501)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$1(ScalametaParser.scala:4518)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$1$adapted(ScalametaParser.scala:4468)
	scala.meta.internal.parsers.ScalametaParser.scala$meta$internal$parsers$ScalametaParser$$listBy(ScalametaParser.scala:505)
	scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4468)
	scala.meta.internal.parsers.ScalametaParser.blockWithinDelims(ScalametaParser.scala:2434)
	scala.meta.internal.parsers.ScalametaParser.blockWithStats$1(ScalametaParser.scala:2437)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:2439)
	scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:300)
	scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:346)
	scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2436)
	scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2430)
	scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2187)
	scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2158)
	scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2141)
	scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2026)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:1607)
	scala.meta.internal.parsers.ScalametaParser.atPosOpt(ScalametaParser.scala:303)
	scala.meta.internal.parsers.ScalametaParser.autoPosOpt(ScalametaParser.scala:347)
	scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1512)
	scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1403)
	scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:1425)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:3736)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:349)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:354)
	scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:3698)
	scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:3644)
	scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3476)
	scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3455)
	scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1.applyOrElse(ScalametaParser.scala:4415)
	scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1.applyOrElse(ScalametaParser.scala:4409)
	scala.PartialFunction.$anonfun$runWith$1(PartialFunction.scala:206)
	scala.PartialFunction.$anonfun$runWith$1$adapted(PartialFunction.scala:205)
	scala.meta.internal.parsers.ScalametaParser.statSeqBuf(ScalametaParser.scala:4357)
	scala.meta.internal.parsers.ScalametaParser.getStats$2(ScalametaParser.scala:4399)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$scala$meta$internal$parsers$ScalametaParser$$templateStatSeq$3(ScalametaParser.scala:4400)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$scala$meta$internal$parsers$ScalametaParser$$templateStatSeq$3$adapted(ScalametaParser.scala:4397)
	scala.meta.internal.parsers.ScalametaParser.scala$meta$internal$parsers$ScalametaParser$$listBy(ScalametaParser.scala:505)
	scala.meta.internal.parsers.ScalametaParser.scala$meta$internal$parsers$ScalametaParser$$templateStatSeq(ScalametaParser.scala:4397)
	scala.meta.internal.parsers.ScalametaParser.scala$meta$internal$parsers$ScalametaParser$$templateStatSeq(ScalametaParser.scala:4386)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4237)
	scala.meta.internal.parsers.ScalametaParser.inBracesOr(ScalametaParser.scala:245)
	scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:241)
	scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4237)
	scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4241)
	scala.meta.internal.parsers.ScalametaParser.templateAfterExtends(ScalametaParser.scala:4184)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$template$1(ScalametaParser.scala:4205)
	scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:300)
	scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:346)
	scala.meta.internal.parsers.ScalametaParser.template(ScalametaParser.scala:4192)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$templateOpt$1(ScalametaParser.scala:4230)
	scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:300)
	scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:346)
	scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4222)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$classDef$1(ScalametaParser.scala:3866)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:349)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:354)
	scala.meta.internal.parsers.ScalametaParser.classDef(ScalametaParser.scala:3842)
	scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:3801)
	scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:3786)
	scala.meta.internal.parsers.ScalametaParser$$anonfun$2.applyOrElse(ScalametaParser.scala:4378)
	scala.meta.internal.parsers.ScalametaParser$$anonfun$2.applyOrElse(ScalametaParser.scala:4366)
	scala.PartialFunction.$anonfun$runWith$1(PartialFunction.scala:206)
	scala.PartialFunction.$anonfun$runWith$1$adapted(PartialFunction.scala:205)
	scala.meta.internal.parsers.ScalametaParser.statSeqBuf(ScalametaParser.scala:4357)
	scala.meta.internal.parsers.ScalametaParser.bracelessPackageStats$1(ScalametaParser.scala:4579)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$11(ScalametaParser.scala:4590)
	scala.meta.internal.parsers.ScalametaParser.autoEndPos(ScalametaParser.scala:349)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$10(ScalametaParser.scala:4590)
	scala.meta.internal.parsers.ScalametaParser.tryParse(ScalametaParser.scala:201)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:4582)
	scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:300)
	scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:346)
	scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4550)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4543)
	scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:300)
	scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:346)
	scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4543)
	scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4548)
	scala.meta.internal.parsers.ScalametaParser.parseSourceImpl(ScalametaParser.scala:127)
	scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$1(ScalametaParser.scala:124)
	scala.meta.internal.parsers.ScalametaParser.parseRuleAfterBOF(ScalametaParser.scala:51)
	scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:46)
	scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:124)
	scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	scala.meta.parsers.Parse$$anon$1.apply(Parse.scala:36)
	scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:206)
	scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:54)
	scala.meta.internal.pc.ScalaPresentationCompiler.$anonfun$semanticdbTextDocument$1(ScalaPresentationCompiler.scala:350)
